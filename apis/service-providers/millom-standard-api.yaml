openapi: 3.0.0
servers: 
- url: https://api.example.millom.com
info:
  version: 1.1.0
  title: Millom standard service provider API
  description: >-
    This details Millom's standard API for service providers. 
    It allows an authorized service provider to query a subscribers' current subscribed products and balances,
    retrieve (personalized) offers for a subscriber, and to activate those offers.
security:
  - application:
      - cco.dd.data-plan.gen.inquire
      - cco.dd.data-plan.gen.activate
paths:
  /std/{serviceProvider}/{subscriberId}/accountInfo:
    get:
      summary: Get account information
      description: Retrieve a subscriber's account details, eg post/prepaid user and monetary balance
      parameters:
      - name: serviceProvider
        required: true
        in: path
        description: Agreed service provider identifier to access the millom platform
        schema:
          type: string
      - name: subscriberId
        required: true
        in: path
        description: User identifier string. Can be MSISDN (default), or url-encoded CPID
        schema:
          type: string
      - name: idType
        required: false
        in: query
        schema:
          type: string
          enum: [MSISDN, CPID]
          default: MSISDN
        description: Type of subscriber ID. MSISDN or CPID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountInfoResponse"
        "400":
          description: "Bad request (wrongly formatted payload or missing mandatory parameters)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Unauthorized (missing or unauthorized access token)"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Server Internal Error (Millom internal failure)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "502":
          description: "Bad gateway (upstream notification failed)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: "Capacity unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "504":
          description: Failure from upstream operator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /std/{serviceProvider}/{subscriberId}/balance:
    get:
      summary: Get telco balance
      description: Retrieve a subscriber's currently subscribed plans with details
      parameters:
      - name: serviceProvider
        required: true
        in: path
        description: Agreed service provider identifier to access the millom platform
        schema:
          type: string
      - name: subscriberId
        required: true
        in: path
        description: User identifier string. Can be MSISDN (default), or url-encoded CPID
        schema:
          type: string
      - name: idType
        required: false
        in: query
        schema:
          type: string
          enum: [MSISDN, CPID]
          default: MSISDN
        description: Type of subscriber ID. MSISDN or CPID.
      - name: language
        description: Requested language. Millom will attempt to return strings (plan IDs, descriptions) in this language, otherwise default language (english) will be used.
        required: false
        in: header
        schema:
          type: string
          default: "en"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceResponse"
        "400":
          description: "Bad request (wrongly formatted payload or missing mandatory parameters)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Unauthorized (missing or unauthorized access token)"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Server Internal Error (Millom internal failure)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "502":
          description: "Bad gateway (upstream notification failed)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: "Capacity unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "504":
          description: Failure from upstream operator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /std/{serviceProvider}/{subscriberId}/upsellOffer:
    get:
      summary: Get upsellOffer
      description: Retrieve a list of offers for a subscriber
      parameters:
      - name: serviceProvider
        required: true
        in: path
        description: Agreed service provider identifier to access the millom platform
        schema:
          type: string
      - name: subscriberId
        required: true
        in: path
        description: User identifier string. Can be MSISDN (default), or url-encoded CPID
        schema:
          type: string
      - name: idType
        required: false
        in: query
        schema:
          type: string
          enum: [MSISDN, CPID]
          default: MSISDN
        description: Type of subscriber ID. MSISDN or CPID.
      - name: language
        description: Requested language. Millom will attempt to return strings (plan IDs, descriptions) in this language, otherwise default language (english) will be used.
        required: false
        in: header
        schema:
          type: string
          default: "en"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferInfoResponse"
        "400":
          description: "Bad request (wrongly formatted payload or missing mandatory parameters)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Unauthorized (missing or unauthorized access token)"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Server Internal Error (Millom internal failure)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "502":
          description: "Bad gateway (upstream notification failed)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: "Capacity unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "504":
          description: Failure from upstream operator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
                
  /std/{serviceProvider}/{subscriberId}/purchasePlan:
    post:
      summary: Purchase plan
      description: Activate the given offer for a subscriber. Payment will be deducted from the fund source.
      parameters:
      - name: serviceProvider
        required: true
        in: path
        description: Agreed service provider identifier to access the millom platform
        schema:
          type: string
      - name: subscriberId
        required: true
        in: path
        description: User identifier string. Can be MSISDN (default), or url-encoded CPID
        schema:
          type: string
      - name: idType
        required: false
        in: query
        schema:
          type: string
          enum: [MSISDN, CPID]
          default: MSISDN
        description: Type of subscriber ID. MSISDN or CPID.
      - name: language
        required: false
        in: header
        description: Requested language. Millom will attempt to return strings (plan IDs, descriptions) in this language, otherwise default language (english) will be used.
        schema:
          type: string
          default: "en"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivationRequest"
      security: []
      responses:
        "200":
          description: "OK - purchase completed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivationResponse"
        "202":
          description: "Queued. User is scheduled for notification"
        "400":
          description: "Bad request (wrongly formatted payload or missing mandatory parameters)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: "Unauthorized (missing or unauthorized access token)"
        "402":
          description: "Insufficient funds"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Purchase in progress, or already executed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Server Internal Error (Millom internal failure)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "502":
          description: "Bad gateway (upstream notification failed)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "503":
          description: "Capacity unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "504":
          description: Failure from upstream operator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas: 
    AccountInfoResponse:
      type: object
      properties:
        accountType:
          type: string
          enum: ["PREPAID", "POSTPAID"]
          description: "Account payment specification: Postpaid (user has credit and is billed regularly) or Prepaid (user pays up front)"
        currency:
          type: string
          description: "ISO 4217 code of currency used in balances"
          example: "USD"
        balances:
          type: array
          items: 
            $ref: "#/components/schemas/AccountBalance"
          description: "A list of balance buckets. A list with balanceType 'main' should always be present if balance is exposed."
        validUntil:
          type: string
          format: date-time
          description: "RFC 3339 formatted timestamp of when this account record should be considered expired"
    AccountBalance:
      type: object
      description: "Representation of a decimal balance as a quoted decimal number"
      properties:
        balanceType: 
          type: string
          description: "Name of this balance wallet. Common types are main, loan, and owed" 
          example: "main"
        balance: 
          type: string
          description: Monetary balance, as a quoted decimal number.
          format: currency
          example: "1.01"
        expiry: 
          type: string
          format: date-time
          description: "RFC 3339 formatted timestamp of this wallet's expiry."
  
    BalanceResponse:
      type: object
      properties:
        activePlans:
          type: array
          items: 
            $ref: "#/components/schemas/ActivePlan"
          description: "A list of telco plans (data, sms, etc)"
        validUntil:
          type: string
          format: date-time
          description: "RFC 3339 formatted timestamp of when this balance record should be considered expired"
    ActivePlan:
      type: object
      required:
      - "planId"
      - "planName"
      properties:
        planId:
          type: string
          description: "Unique plan identifier"
          example: "P1234"
        planName:
          type: array
          items:
            $ref: "#/components/schemas/MultilingualText"
          description: "Customer facing name of this plan"
        planDescription:
          type: array
          items:
            $ref: "#/components/schemas/MultilingualText"
          description: "Detailed description of the plan"
          example: "10 GB monthly data for USD 10"
        expiry:
          type: string
          format: date-time
          description: "RFC 3339 formatted timestamp of when this plan expires"
        gauge:
          type: array
          items:
            type: object
            properties:
              unit:
                type: string
                enum: ["bytes", "data-minutes", "voice-minutes", "sms"]
              quota: 
                type: number
                example: 1073741824
                description: >
                  The value of the initial size, in the given unit.
                  Unlimited plans are expressed with a byte quota value of 2^63 - 1 (9223372036854775807).
              remaining:
                type: number
                example: 100
        applications:
          type: array
          description: "List of application types for app-specific data plans. Common types are 'video', 'social', 'music', 'gaming' and 'generic' (default)"
          items:
            type: string
            example: "video"
        
        
    OfferInfoResponse:
      required:
      - "resultCode"
      type: object
      properties:
        resultCode: 
          type: string
          enum: ["1","2","3"]
          description: >
            Aggregated status of user
            
            * ´1´ - Good to go. User has positive data balance and can use Internet for the service
            
            * ´2´ - Offers available. The user have no activated data plans or low balance, but have offers to purchase. Offers will be populated in the 'offers' array.
            
            * '3' - Need topup. No offers was found that user could purchase. The user needs to add funds to his/her account.
        offers:
          type: array
          items:
            $ref: "#/components/schemas/Offer"
        cache:
          type: object
          properties:
            ttl:
              type: number
              description: The number of seconds this response is considered to remain valid. Clients may cache this response for this time.
            cache:
              type: boolean
              default: false
              description: true if this offer was served from millom cache, or false if retrieved directly from operator.
              
    Offer:
      type: object
      properties:
        planId: 
          type: string
          description: Unique ID for this offered plan
        cost:
          type: string
          description: Cost of this offer, as a quoted decimal number.
          format: currency
          example: "14"
        costCurrency:
          type: string
          description: ISO 4217 code for the currency of the cost.
        type: 
          type: string
          description: Description of the type of dataplan this is.
          example: "Data"
        planName:
          type: array
          items:
            $ref: "#/components/schemas/MultilingualText"
        planDescription: 
          type: array
          items: 
            $ref: "#/components/schemas/MultilingualText"
        quota:
          description: The initial size of this plan, in bytes, minutes etc
          type: array
          items:
            type: object
            properties:
              unit:
                type: string
                enum: ["bytes", "data-minutes", "voice-minutes", "sms"]
                example: "bytes"
              quota:
                type: number
                example: 1073741824
                description: >
                  The value of the initial size, in the given unit.
                  Unlimited plans are expressed with a byte quota value of 2^63 - 1 (9223372036854775807).
        offerContext:
          type: string
          description: random text string with offer cookie data. \
            If present, it must be provided in activation request.
            
    ActivationRequest:
      type: object
      required: 
      - "transid"
      - "planid"
      properties:
        transid:
          type: string
          description: >
            Unique transaction id that must allow a minimum of
            10 alphanumeric characters including dashes and dots. 
            Preferrably UUID format IETF RFC4122.
        planid:
          type: string
          description: >
            Unique ID for the offer to activate. 
            Equal to planId in one of the offers returned in upsellOffer API.
        offercontext:
          type: string
          description: offerContext from the selected Offer. 
            If present, provide without modification
        fundSource:
          type: string
          description: Identifies source of funds for this activation
          enum: [WALLET, LOAN]
          default: WALLET
          
    ActivationResponse:
      type: object
      properties:
        transid:
          type: string
          description: >
            Unique transaction id that must allow a minimum of
            10 alphanumeric characters including dashes and dots. 
            Preferrably UUID format IETF RFC4122.
        status:
          type: string
          enum: ["completed", "processing", "failed"]
          description: Description of the transaction status
        fundSource:
          type: string
          description: Identifies source of funds for this activation
          enum: [WALLET, LOAN]
          default: WALLET
        transactionMessage:
          type: string
          description: Textual message from upstream operator
    
    MultilingualText:
      type: object
      properties:
        language: 
          type: string
          description: What language the 'text' field is expressed as. BCP-47 language code 
          example: "en-us"
        text:
          type: string
          description: Textual description of this offer, for humans to read.
          example: "Super plan, 10 GB data valid for a week"      
          
    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: string
          description: Error cause description
        opcode:
          type: string
          description: Incoming error from backend, if applicable
          
  securitySchemes:
    application:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            cco.dd.data-plan.gen.inquire: Allows querying user details
            cco.dd.data-plan.gen.activate: Allows activating plans on behalf of the user